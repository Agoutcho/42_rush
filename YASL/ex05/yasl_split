#!yasl

{
	# #(print " 3\n" print)
} p

// verification si il y a plus d'un arg sinon on quitte
3
!=
? ("Usage : ./yasl_split <separator> <string>" print 1 exit) : !

// verification si le separator est bien 1 seul char
][
1
!=
? ("<separator> has to be 1 char" print 1 exit)

2 ^
0:][:1 // split de la string 
1:=:0 // on recupere le nombre d'element cree
// on envoie tous les elements dans la stack 2 pour avoir le bon ordre
1:(#(1:=:2 1:!:1)):1 
0:=:1 // on enregistre le nombre d'element

%@(
    2 ^ 
    2:=:0
    2:!:2
    %!=
    ? (print 2 ^) : (! 1 
    @(2:=:0 %!= 
    ?("\n" print ! 0) : (2:!:2 ! 2 ^ 1 - 2 ^ 1)) 
    2 ^)
    0
    %>
    ? (! 1 -))

// %@(
// 2:=:0
// 2:!:2
// %!=
// ? print : ("\n" print !) 1 -)
"\n" print
